{
    "Comment": "A progress of the step function when it is designed to write new records into DynamoDB Table",
    "StartAt": "Starter",
    "States": {
        "Starter": {
            "Type": "Pass",
            "Result": {
                "waitSeconds": 1,
                "database": "${database}",
                "table": "${table}"
            },
            "Next": "DynamoDBSetupTask"
        },
        "DynamoDBSetupTask": {
            "Type": "Task",
            "Resource": "${setup_function}",
            "OutputPath": "$.Payload",
            "Next": "QueryTask"
        },
        "QueryTask": {
            "Type": "Task",
            "Resource": "arn:aws:states:::athena:getQueryExecution",
            "Parameters": {
                "QueryExecutionId": "$.query_string"
            },
            "ResultPath": "$.Query",
            "Next": "QueryStatusTask"
        },
        "QueryStatusTask": {
            "Type": "Task",
            "Resource": "arn:aws:states:::athena:getQueryExecution",
            "Parameters": {
                "QueryExecutionId": "$.Query.QueryExecutionId"
            },
            "ResultPath": "$.Query",
            "ResultSelector": {
                "QueryExecutionId.$": "$.Query.QueryExecutionId",
                "Status.$": "$.QueryExecution.Status.State"
            },
            "Next": "QueryStatusChoice"
        },
        "QueryStatusChoice": {
            "Type": "Choice",
            "Choices": [
                {
                    "StringEquals": "FAILED",
                    "Variable": "$.Query.Status",
                    "Next": "QueryFailureState"
                },
                {
                    "StringEquals": "SUCCEEDED",
                    "Variable": "$.Query.Status",
                    "Next": "QuerySucceedResult"
                }
            ],
            "Default": "WaitState"
        },
        "QueryFailureState": {
            "Type": "Pass",
            "Result": "Query Failed!",
            "End": true
        },
        "QuerySucceedResult": {
            "Type": "Pass",
            "Result": "Dropping Table Succeeded!",
            "Next": "WriteTask"
        },
        "WriteTask": {
            "Type": "Task",
            "Resource": "${write_function}",
            "OutputPath": "$.Payload",
            "Next": "WriteResultChoice"
        },
        "WriteResultChoice": {
            "Type": "Choice",
            "Choices": [
                {
                    "StringEquals": "FAILED",
                    "Variable": "$.Status",
                    "Next": "WriteFailureState"
                },
                {
                    "StringEquals": "SUCCEEDED",
                    "Variable": "$.Status",
                    "Next": "WriteSucceedResult"
                }
            ]
        },
        "WriteFailureState": {
            "Type": "Pass",
            "Result": "Writing Records To Table Failed!",
            "End": true
        },
        "WriteSucceedResult": {
            "Type": "Succeed"
        },
        "WaitState": {
            "Type": "Wait",
            "SecondsPath": "$.waitSeconds",
            "Next": "WaitTimeBackoffState"
        },
        "WaitTimeBackoffState": {
            "Type": "Task",
            "Resource": "${backoff_function}",
            "Parameters": {
              "FunctionName": "function ARN"
            },
            "OutputPath": "$.Payload",
            "Next": "QueryStatusTask"
        }
    }

}